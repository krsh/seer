from scipy.spatial import distance


ARM64 = [100, 35, 12, 7, 18, 31, 14, 17, 30, 4, 13, 2, 5, 19, 12, 6, 22, 11, 3, 2, 24, 16, 5, 9, 22, 3, 8, 2, 17, 4,
         14, 7, 7, 3, 4, 2, 25, 30, 3, 5, 13, 2, 48, 1, 6, 11, 28, 4, 9, 3, 4, 1, 13, 11, 2, 2, 40, 6, 4, 2, 18, 17, 53, 74]
ARM32 = [49, 34, 29, 11, 27, 6, 12, 5, 27, 4, 4, 7, 42, 4, 4, 3, 3, 3, 2, 3, 22, 5, 3, 2, 6, 1, 1, 2, 6, 1, 1, 1,
         9, 9, 4, 24, 13, 8, 3, 24, 42, 1, 2, 1, 3, 2, 2, 4, 2, 4, 2, 2, 6, 6, 2, 2, 100, 65, 37, 4, 5, 3, 3, 46]
PPC64 = [49, 22, 34, 9, 13, 11, 31, 9, 48, 8, 30, 26, 7, 3, 72, 35, 43, 4, 63, 10, 10, 6, 4, 5, 44, 6, 8, 3, 8, 3,
         53, 84, 50, 7, 12, 7, 13, 3, 6, 7, 14, 12, 5, 3, 5, 7, 4, 6, 9, 5, 6, 2, 6, 3, 6, 6, 16, 6, 50, 2, 13, 9, 36, 100]
PPC32 = [69, 24, 48, 21, 52, 20, 22, 19, 47, 10, 21, 34, 12, 6, 79, 34, 26, 5, 59, 14, 7, 12, 5, 4, 33, 6, 10, 3, 7, 9,
         51, 100, 41, 10, 16, 2, 28, 8, 8, 44, 18, 16, 6, 3, 5, 2, 7, 12, 8, 9, 6, 2, 5, 3, 6, 4, 17, 5, 11, 2, 10, 5, 13, 52]
X86_64 = [36, 38, 30, 28, 14, 9, 10, 6, 8, 39, 12, 6, 23, 8, 13, 15, 32, 32, 100, 26, 10, 15, 8, 13, 6, 8, 4, 4, 6, 33,
          7, 12, 21, 25, 93, 30, 3, 3, 3, 2, 2, 2, 3, 3, 3, 6, 8, 11, 14, 23, 7, 4, 9, 4, 5, 4, 7, 9, 58, 16, 8, 16, 20, 92]
I686 = [40, 39, 57, 39, 46, 14, 11, 11, 9, 59, 9, 7, 14, 7, 13, 11, 17, 34, 6, 8, 32, 26, 19, 18, 3, 7, 20, 4, 5, 43,
        6, 12, 37, 30, 89, 18, 4, 5, 3, 4, 6, 2, 4, 3, 3, 8, 15, 5, 19, 31, 9, 4, 12, 6, 13, 6, 7, 4, 63, 8, 9, 14, 22, 100]
M68K = [37, 23, 29, 41, 23, 9, 6, 7, 48, 19, 15, 69, 7, 4, 7, 9, 20, 9, 42, 30, 15, 6, 9, 4, 36, 28, 5, 19, 12, 8,
        19, 5, 12, 5, 10, 14, 11, 5, 2, 1, 1, 5, 4, 11, 8, 3, 4, 6, 2, 2, 3, 5, 7, 3, 2, 3, 4, 7, 6, 16, 9, 7, 14, 100]
MIPS32 = [96, 29, 35, 7, 57, 17, 19, 9, 100, 64, 15, 6, 13, 5, 9, 10, 15, 10, 3, 2, 6, 3, 2, 3, 15, 3, 1, 1, 3, 1,
          1, 2, 16, 17, 7, 92, 11, 4, 26, 5, 20, 11, 3, 33, 17, 8, 6, 32, 3, 4, 6, 1, 2, 1, 2, 1, 10, 3, 2, 1, 2, 1, 22, 20]
MIPS64 = [100, 27, 40, 5, 49, 14, 13, 4, 52, 26, 15, 49, 14, 2, 10, 8, 14, 7, 7, 1, 13, 3, 3, 1, 17, 31, 3, 1, 3, 0,
          3, 1, 12, 14, 10, 9, 12, 3, 25, 4, 23, 10, 5, 5, 19, 8, 9, 17, 2, 2, 6, 0, 2, 1, 1, 66, 10, 1, 3, 0, 3, 1, 23, 43]
SH4 = [60, 27, 100, 16, 38, 19, 28, 25, 48, 18, 19, 34, 27, 12, 13, 11, 29, 11, 25, 35, 26, 14, 6, 4, 49, 41, 33, 16, 19,
       9, 10, 13, 15, 7, 31, 29, 19, 9, 5, 4, 26, 5, 3, 5, 7, 4, 3, 2, 5, 5, 8, 2, 43, 16, 7, 5, 28, 18, 7, 5, 17, 26, 6, 17]

SIMILARITY = [ARM32, ARM64, PPC32, PPC64,
              X86_64, I686, M68K, MIPS32, MIPS64, SH4]


def get_name(x):
    return [i for i, a in globals().items() if a == x][0]


def similarity(values):
    results = []
    for sim in SIMILARITY:
        val = int(100 * (1 - distance.cosine(values, sim)))
        results.append({"arch": get_name(sim), "val": val})

    return sorted(results, key=lambda d: d['val'], reverse=True)
